// Generated by CoffeeScript 1.4.0
var cache, dataStoreModule, datastore, hostStateModule, hoststate, should;

should = require("should");

dataStoreModule = require("../../src/datastore");

datastore = dataStoreModule.datastore;

cache = dataStoreModule.cache;

hostStateModule = require("../../src/hoststate");

hoststate = hostStateModule.hoststate;

describe("datastore", function() {
  beforeEach(function() {
    return cache.clear();
  });
  it('get return data stucture with blank value if not exist.', function() {
    var result;
    result = datastore.get('roomName');
    return result.should.eql({
      "stories": {},
      "participants": {},
      state: hoststate.INITIAL
    });
  });
  it('put data into memory.', function() {
    var anyData, result;
    anyData = {
      'anyData': 'anyData'
    };
    datastore.put('roomName', anyData);
    result = cache.get('roomName');
    return result.should.eql(anyData);
  });
  it('get return data from memory', function() {
    var anyData, result;
    anyData = {
      'anyData': 'anyData'
    };
    cache.put('roomName', anyData);
    result = datastore.get('roomName');
    return result.should.eql(anyData);
  });
  return it('can clear data', function() {
    datastore.put('abc', 'testData');
    datastore.clear();
    return datastore.get('abc').should.eql({
      "stories": {},
      "participants": {},
      state: hoststate.INITIAL
    });
  });
});
