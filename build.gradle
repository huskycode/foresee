apply plugin: "groovy"

ext.srcDir = "src"
ext.testDir = "src/test/unit"
ext.distDir = "build/dist"
ext.browsertestDir = "test/browsertest"
ext.webtestDir = "test/webtest"
ext.executableName = "foresee"
ext.buildDir = "build"
ext.providedReqs = ["java"]
ext.deployPaths = ["dev": "/opt/foresee-dev", "qa": "/opt/foresee-qa", "prod": "/opt/foresee"]

import org.apache.tools.ant.taskdefs.condition.Os

def getCommand(command) {
  return Os.isFamily(Os.FAMILY_WINDOWS) ? command + ".cmd" : command
}

repositories {
    mavenCentral()
}

dependencies {
    def gebVersion = "0.9.0"
    def seleniumVersion = "2.42.2"

    testCompile "org.codehaus.groovy:groovy-all:2.0.5"

    // If using JUnit, need to depend on geb-junit (3 or 4)
    testCompile "junit:junit:4.11"
    testCompile "org.gebish:geb-junit4:$gebVersion"

    // Drivers
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
}

/**** Unit Tests ****/
test {
    dependsOn "unitTest", "webTest"
    enabled = false
}

task unitTest(type:Exec) {
    commandLine getCommand("jasmine-node"), "--verbose", testDir
}

task unitTestTeamCity(type:Exec) {
    commandLine getCommand("jasmine-node"), "--teamcity", testDir
}

task webTest(type: Test) {
  dependsOn "cleanTest"

  include '**/WebTestSuite.class'

  systemProperty "geb.build.reportsDir", reporting.file("geb")
  systemProperty "geb.env", "firefox"
}

task deleteDist(type: Delete) {
    delete distDir
}


task zip(type: Zip) {
  dependsOn "deleteDist"

  destinationDir = new File(distDir)
  archiveName = "foresee-linux.zip"

  from('src/') { into('foresee/src') }
  from('assets/') { into('foresee/assets') }
  from('node_modules/') { into('foresee/node_modules') }
  from('views/') { into('foresee/views') }
  from('public/') { into('foresee/public') }
  from('app.js') { into('foresee/') }
  from('build_res/node-exe/linux-x64/node') {
     fileMode = 0755
     into('foresee/')
  }
    from('build_res/script/linux/foresee') {
        fileMode = 0755
        into('foresee/')
    }
}

/**** Dev ****/
task npmDependencies(type:Exec) {
  commandLine 'npm', 'install'
}

task dev(type:Exec) {
    commandLine getCommand("nodemon"), "--watch", srcDir, "-e", "js", "app.js"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}
